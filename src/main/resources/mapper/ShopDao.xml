<?xml version="1.0" encoding="UTF-8"?>
<!-- 下面的这个是导入我们的mapper的映射文件的规范 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hailong.o2o.dao.ShopDao">
	<!-- 我们手动指定数据的映射 -->
	<resultMap type="com.hailong.o2o.entity.Shop" id="shopMap">
		<!-- 先是基本数据类型的映射 -->
		<id column="shop_id" property="shopId" />
		<result column="shop_name" property="shopName" />
		<result column="shop_desc" property="shopDesc" />
		<result column="shop_addr" property="shopAddr" />
		<result column="phone" property="phone" />
		<result column="shop_img" property="shopImg" />
		<result column="priority" property="priority" />
		<result column="create_time" property="createTime" />
		<result column="last_edit_time" property="lastEditTime" />
		<result column="enable_status" property="enableStatus" />
		<result column="advice" property="advice" />
		<!-- 下面是复杂的数据类型 -->
		<association property="area" column="area_id" javaType="com.hailong.o2o.entity.Area">
			<id column="area_id" property="areaId" />
			<result column="area_name" property="areaName" />
		</association>
		<association property="shopCategory" column="shop_category_id" javaType="com.hailong.o2o.entity.ShopCategory">
			<id column="shop_category_id" property="shopCategoryId" />
			<result column="shop_category_name" property="shopCategoryName" />
		</association>
		<association property="owner" column="user_id" javaType="com.hailong.o2o.entity.PersonInfo">
			<id column="user_id" property="userId" />
			<result column="username" property="username" />
		</association>
	</resultMap>
	<!-- 下面的这个方法是根据我们的传入的商店的id来查询我们的商店对象 又因为我们的这个查询的结果是也有我们的Area对象当中的name,还有我们的Shop_category的名,所以我们的返回值使用ResultMap 
		来自己手动指定映射的值 -->
	<select id="selectShopById" parameterType="long" resultMap="shopMap">
		select 
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.advice,
		a.area_id,
		a.area_name,
		c.shop_category_id,
		c.shop_category_name
		from 
		tb_shop_category c,
		tb_area a,
		tb_shop s
		where 
		a.area_id=s.area_id
		and
		c.shop_category_id=s.shop_category_id 
		and
		s.shop_id=#{shopId}
	</select>
	<!-- 用来使用分页来查询我们的商铺信息的方法 -->
	<select id="queryShopList" resultMap="shopMap">
		select 
		s.shop_id,
		s.shop_name,
		s.shop_desc,
		s.shop_addr,
		s.phone,
		s.shop_img,
		s.priority,
		s.create_time,
		s.last_edit_time,
		s.enable_status,
		s.owner_id,
		s.advice,
		a.area_id,
		a.area_name,
		c.shop_category_id,
		c.shop_category_name
		from 
		tb_shop_category c,
		tb_area a,
		tb_shop s
		<where>
			<if test="shopCondition!=null">
				<if test="shopCondition.shopCategory !=null and shopCondition.shopCategory.shopCategoryId!=null">
					and c.shop_category_id=#{shopCondition.shopCategory.shopCategoryId}
				</if>
				
				<if test="shopCondition.area !=null and shopCondition.area.areaId !=null">
					and a.area_id=#{shopCondition.area.areaId}
				</if>
				
				<if test="shopCondition.enableStatus !=null">
					and s.enable_status=#{shopCondition.enableStatus}
				</if>
				
				<if test="shopCondition.shopName !=null">
					and s.shop_name like "%${shopCondition.shopName}%"
				</if>
				
				<if test="shopCondition.owner !=null and shopCondition.owner.userId!=null">
					and s.owner_id=#{shopCondition.owner.userId}
				</if>
			</if>
			and 
			a.area_id=s.area_id
			and
			c.shop_category_id=s.shop_category_id
		</where>
		order by 
		priority desc 
		limit #{rowIndex},#{pageSize};
	</select>
	<!-- 下面这个方法查询的为商铺表中的所有的记录 -->
	<select id="selectShopCount" resultType="int">
		select count(1) from 
		tb_shop_category c,
		tb_area a,
		tb_shop s 
		<where>
			<if test="shopCondition!=null">
				<if test="shopCondition.shopCategory !=null and shopCondition.shopCategory.shopCategoryId!=null">
					and c.shop_category_id=#{shopCondition.shopCategory.shopCategoryId}
				</if>
				
				<if test="shopCondition.area !=null and shopCondition.area.areaId !=null">
					and a.area_id=#{shopCondition.area.areaId}
				</if>
				
				<if test="shopCondition.enableStatus !=null">
					and s.enable_status=#{shopCondition.enableStatus}
				</if>
				
				<if test="shopCondition.shopName !=null">
					and s.shop_name like "%${shopCondition.shopName}%"
				</if>
				
				<if test="shopCondition.owner !=null and shopCondition.owner.userId!=null">
					and s.owner_id=#{shopCondition.owner.userId}
				</if>
			</if>
			and 
			a.area_id=s.area_id
			and
			c.shop_category_id=s.shop_category_id
		</where> 
	</select>
	<!-- 进行插入一个店铺的基本的数据信息 参数解释如下: useGeneratedKeys:在插入数据时，动态的通过jdbc返回自动增加的keyColumn列的数据到这个shop对象的keyProperty属性当中 -->
	<insert id="insertShop" parameterType="Shop" useGeneratedKeys="true"
		keyColumn="shop_id" keyProperty="shopId">
		<!-- 具体的插入sql语句如下 -->
		INSERT INTO tb_shop
		(owner_id,area_id,shop_category_id,shop_name,shop_desc,shop_addr,
		phone,shop_img,priority,create_time,last_edit_time,enable_status,advice)
		VALUES
		(#{owner.userId},#{area.areaId},#{shopCategory.shopCategoryId},#{shopName},#{shopDesc},#{shopAddr},
		#{phone},#{shopImg},#{priority},#{createTime},#{lastEditTime},#{enableStatus},#{advice});
	</insert>
	<!-- 进行更新我们的店铺的数据 -->
	<update id="updateShop" parameterType="Shop">
		<!-- 我们的更新操作可以使用动态的sql来进行操作 -->
		update tb_shop
		<!-- 设置值的集合 -->
		<set>
			<!-- 下面是我们的更新具体的字段的操作 通过分析得知 我们的id是不能更改的，同时规定我们的注册时间(createTime)和店铺的主人也是不能修改的(ownerid) -->
			<if test="shopName!=null">shop_name=#{shopName},</if>
			<if test="shopDesc!=null">shop_desc=#{shopDesc},</if>
			<if test="shopAddr!=null"> shop_addr=#{shopAddr},</if>
			<if test="phone!=null">phone=#{phone},</if>
			<if test="shopImg!=null"> shop_img=#{shopImg},</if>
			<if test="priority!=null">priority=#{priority},</if>
			<if test="lastEditTime!=null">last_edit_time=#{lastEditTime},</if>
			<if test="enableStatus!=null">enable_status=#{enableStatus},</if>
			<if test="advice!=null"> advice=#{advice},</if>
			<!-- 下面开始进行设置复杂的数据类型 -->
			<if test="area!=null">area_id=#{area.areaId},</if>
			<if test="shopCategory!=null">shop_category_id=#{shopCategory.shopCategoryId}</if>
		</set>
		where shop_id=#{shopId}
	</update>


</mapper>